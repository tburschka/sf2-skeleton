<?xml version="1.0" encoding="UTF-8"?>
<project name="sf2-skeleton" default="build:ci">
    <property name="php" value="php"/>
    <property name="bindir" value="${basedir}/bin"/>
    <property name="builddir" value="${basedir}/build"/>

    <target name="build:ci"
            depends="prepare,lint,phploc,pdepend,phpmd:ci,phpcs:ci,phpcpd,phpunit,phpdox"/>

    <target name="composer:download"
            description="Downloads composer.phar (when it does not exist or is older than 30 days)">
        <tstamp>
            <format property="thirty.days.ago" pattern="MM/dd/yyyy hh:mm aa" offset="-30" unit="day"/>
        </tstamp>
        <delete>
            <fileset dir="${basedir}">
                <include name="composer.phar"/>
                <date datetime="${thirty.days.ago}" when="before"/>
            </fileset>
        </delete>
        <get src="https://getcomposer.org/composer.phar" dest="${basedir}/composer.phar" skipexisting="true"/>
    </target>

    <target name="composer:install" depends="composer:download" description="Install dependencies with Composer">
        <exec executable="php">
            <arg value="composer.phar"/>
            <arg value="install"/>
            <arg value="--no-progress"/>
        </exec>
    </target>

    <target name="composer:update" depends="composer:download" description="Update dependencies with Composer">
        <exec executable="php">
            <arg value="composer.phar"/>
            <arg value="update"/>
            <arg value="--no-progress"/>
        </exec>
    </target>

    <target name="cleanup" description="Cleanup build artifacts">
        <delete dir="${basedir}/app/cache"/>
        <delete dir="${basedir}/app/logs"/>
        <delete dir="${basedir}/build"/>
        <delete dir="${basedir}/vendor"/>
        <delete file="${basedir}/composer.lock"/>
    </target>

    <target name="prepare" depends="cleanup,composer:install" description="Prepare for build">
        <mkdir dir="${basedir}/app/cache"/>
        <mkdir dir="${basedir}/app/logs"/>
        <mkdir dir="${builddir}"/>
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
        <mkdir dir="${builddir}/phpdox"/>
    </target>

    <target name="lint">
        <apply executable="${php}" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${basedir}/src">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${bindir}/phploc">
            <arg value="--log-csv"/>
            <arg value="${builddir}/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg value="${builddir}/logs/phploc.xml"/>
            <arg path="${basedir}/src"/>
            <arg value="--exclude"/>
            <arg path="${basedir}/src/**/Tests/*"/>
        </exec>
    </target>

    <target name="pdepend"
            description="Calculate software metrics using PHP_Depend">
        <exec executable="${bindir}/pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg"/>
            <arg value="--ignore=${basedir}/src/**/Tests/*"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD">
        <exec executable="${bindir}/phpmd">
            <arg path="${basedir}/src"/>
            <arg value="text"/>
            <arg value="cleancode,codesize,controversial,design,naming,unusedcode"/>
        </exec>
    </target>

    <target name="phpmd:ci"
            description="Perform project mess detection using PHPMD">
        <exec executable="${bindir}/phpmd">
            <arg path="${basedir}/src"/>
            <arg value="xml"/>
            <arg value="cleancode,codesize,controversial,design,naming,unusedcode"/>
            <arg value="--reportfile"/>
            <arg value="${builddir}/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="${bindir}/phpcs">
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcs:ci"
            description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="${bindir}/phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${builddir}/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${bindir}/phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${builddir}/logs/pmd-cpd.xml"/>
            <arg path="${basedir}/src"/>
            <arg value="--exclude"/>
            <arg path="${basedir}/src/**/Tests/*"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${bindir}/phpunit" failonerror="true">
            <arg value="--configuration"/>
            <arg path="${basedir}/app/phpunit.xml.dist"/>
            <arg value="--log-junit"/>
            <arg path="${builddir}/logs/junit.xml"/>
            <arg value="--coverage-clover"/>
            <arg path="${builddir}/logs/clover.xml"/>
            <arg value="--coverage-xml"/>
            <arg path="${builddir}/coverage"/>
        </exec>
    </target>

    <target name="phpdox"
            description="Generate software project documentation using phpDox">
        <exec executable="${bindir}/phpdox"/>
    </target>
</project>